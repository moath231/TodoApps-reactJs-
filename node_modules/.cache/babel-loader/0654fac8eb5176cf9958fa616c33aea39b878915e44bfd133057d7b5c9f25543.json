{"ast":null,"code":"var _jsxFileName = \"/home/moto/Documents/htdocs/my-app/src/components/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport ItemRemaining from './ItemRemaining';\nimport TodoClearCompleted from './TodoClearCompleted';\nimport Todocheckall from './Todocheckall';\nimport FilterTodo from './FilterTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTodoList.propTypes = {\n  todos: PropTypes.array.isRequired,\n  completeTodo: PropTypes.func.isRequired,\n  markAsEditing: PropTypes.func.isRequired,\n  todosFiltered: PropTypes.func.isRequired,\n  updateTodo: PropTypes.func.isRequired,\n  canceleditTodo: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  remaining: PropTypes.func.isRequired,\n  ClearCompleted: PropTypes.func.isRequired,\n  checkAll: PropTypes.func.isRequired\n};\nexport default function TodoList(props) {\n  _s();\n  const [filter, setfilter] = useState('all');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: props.todosFiltered(filter).map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-item-container \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-item \",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: () => props.completeTodo(todo.id),\n            checked: todo.isComplete ? 'checked' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), !todo.isediting ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `todo-item-label ${todo.isComplete ? 'line-through' : ''}`,\n            onDoubleClick: () => props.markAsEditing(todo.id),\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onBlur: event => props.updateTodo(event, todo.id),\n            onKeyDown: event => {\n              if (event.key === 'Enter') {\n                props.updateTodo(event, todo.id);\n              } else if (event.key === 'Escape') {\n                props.canceleditTodo(event, todo.id);\n              }\n            },\n            className: \"todo-item-input\",\n            defaultValue: todo.title,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => props.deleteTodo(todo.id),\n          className: \"x-button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"x-button-icon\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M6 18L18 6M6 6l12 12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check-all-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Todocheckall, {\n          checkAll: props.checkAll\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ItemRemaining, {\n        remaining: props.remaining\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(FilterTodo, {\n        todosFiltered: props.todosFiltered,\n        filter: filter,\n        setFilter: setfilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TodoClearCompleted, {\n          ClearCompleted: props.ClearCompleted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoList, \"PzvAVvY9E9igrOREL98ynJAfabc=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","PropTypes","func","ItemRemaining","TodoClearCompleted","Todocheckall","FilterTodo","jsxDEV","_jsxDEV","TodoList","propTypes","todos","array","isRequired","completeTodo","markAsEditing","todosFiltered","updateTodo","canceleditTodo","deleteTodo","remaining","ClearCompleted","checkAll","props","_s","filter","setfilter","children","className","map","todo","index","type","onChange","id","checked","isComplete","fileName","_jsxFileName","lineNumber","columnNumber","isediting","onDoubleClick","title","onBlur","event","onKeyDown","key","defaultValue","autoFocus","onClick","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","setFilter","_c","$RefreshReg$"],"sources":["/home/moto/Documents/htdocs/my-app/src/components/TodoList.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes, { func } from 'prop-types';\nimport ItemRemaining from './ItemRemaining';\nimport TodoClearCompleted from './TodoClearCompleted';\nimport Todocheckall from './Todocheckall';\nimport FilterTodo from './FilterTodo';\n\nTodoList.propTypes = {\n  todos          : PropTypes.array.isRequired,\n  completeTodo   : PropTypes.func.isRequired,\n  markAsEditing  : PropTypes.func.isRequired,\n  todosFiltered  : PropTypes.func.isRequired,\n  updateTodo     : PropTypes.func.isRequired,\n  canceleditTodo : PropTypes.func.isRequired,\n  deleteTodo     : PropTypes.func.isRequired,\n  remaining      : PropTypes.func.isRequired,\n  ClearCompleted : PropTypes.func.isRequired,\n  checkAll       : PropTypes.func.isRequired,\n};\n\nexport default function TodoList(props) {\n  const [filter, setfilter] = useState('all');\n\n  return (\n    <div>\n      <ul className = \"todo-list\">\n        {props.todosFiltered(filter).map((todo, index) => (\n          <li key = {todo.id} className = \"todo-item-container \">\n            <div className = \"todo-item \">\n              <input\n                type     = \"checkbox\"\n                onChange = {() => props.completeTodo(todo.id)}\n                checked  = {todo.isComplete ? 'checked' : ''}\n              />\n              {!todo.isediting ? (\n                <span\n                  className={`todo-item-label ${\n                    todo.isComplete ? 'line-through' : ''\n                  }`}\n                  onDoubleClick = {() => props.markAsEditing(todo.id)}\n                >\n                  {todo.title}\n                </span>\n              ) : (\n                <input\n                  type      = \"text\"\n                  onBlur    = {(event) => props.updateTodo(event, todo.id)}\n                  onKeyDown = {(event) => {\n                    if (event.key === 'Enter') {\n                      props.updateTodo(event, todo.id);\n                    } else if (event.key === 'Escape') {\n                      props.canceleditTodo(event, todo.id);\n                    }\n                  }}\n                  className    = \"todo-item-input\"\n                  defaultValue = {todo.title}\n                  autoFocus\n                />\n              )}\n            </div>\n            <button\n              onClick   = {() => props.deleteTodo(todo.id)}\n              className = \"x-button\"\n            >\n              <svg\n                className = \"x-button-icon\"\n                fill      = \"none\"\n                viewBox   = \"0 0 24 24\"\n                stroke    = \"currentColor\"\n              >\n                <path\n                  strokeLinecap  = \"round\"\n                  strokeLinejoin = \"round\"\n                  strokeWidth    = {2}\n                  d              = \"M6 18L18 6M6 6l12 12\"\n                />\n              </svg>\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <div className = \"check-all-container\">\n        <div>\n          <Todocheckall checkAll = {props.checkAll} />\n        </div>\n\n        <ItemRemaining remaining = {props.remaining} />\n      </div>\n\n      <div className = \"other-buttons-container\">\n        <FilterTodo\n          todosFiltered = {props.todosFiltered}\n          filter        = {filter}\n          setFilter     = {setfilter}\n        />\n\n        <div>\n          <TodoClearCompleted ClearCompleted = {props.ClearCompleted} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}